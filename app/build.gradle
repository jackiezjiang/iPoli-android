apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'jacoco'
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    dexOptions {
        javaMaxHeapSize "2g"
        preDexLibraries true
        dexInProcess true
    }

    defaultConfig {
        applicationId "io.ipoli.android"
        multiDexEnabled true
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 74
        versionName "1.8.2"
	
	
	testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    testOptions {
        unitTests {
            all {
                // configure the test JVM arguments
                jvmArgs '-noverify'
                systemProperty 'robolectric.logging.enable', true
            }
        }
    }


    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug { 
            testCoverageEnabled = true 
        } 
        
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    apt 'com.google.dagger:dagger-compiler:2.6.1'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'joda-time:joda-time:2.9.4'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.powermock:powermock:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.2'
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.2'
    testCompile 'org.robolectric:robolectric:3.0-rc3'

    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.1'
    androidTestCompile 'com.android.support.test:runner:0.5'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support:support-annotations:24.2.0'
    
    
    compile 'com.google.firebase:firebase-database:9.4.0'
    compile 'com.facebook.android:facebook-android-sdk:4.14.1'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:design:24.2.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.android.support:support-v4:24.2.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.google.dagger:dagger:2.6.1'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.0.Final'
    compile 'org.ocpsoft.prettytime:prettytime-nlp:4.0.0.Final'
    compile 'com.github.paolorotolo:appintro:4.0.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.3'
    compile 'com.trello:rxlifecycle:0.6.1'
    compile 'com.trello:rxlifecycle-components:0.6.1'
    compile 'net.danlew:android.joda:2.9.4.1'
    compile 'com.flurry.android:analytics:6.2.0'
    compile 'com.github.sundeepk:compact-calendar-view:1.8.9'
    compile 'me.everything:providers-android:1.0.1'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.github.PhilJay:MPAndroidChart:v2.2.5'
    compile 'com.github.devlight:infinitecycleviewpager:1.0.2'
}

jacoco {
toolVersion = "0.7.5.201505241946"
}


task jacocoInstrumentTestCoverageReport(type: JacocoReport, dependsOn:["connectedAndroidTest","test"]) {
	
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    sourceDirectories = files('src/main/java/io/ipoli/android')
    //executionData = files("${buildDir}/jacoco/allTests.exec")
	 executionData =  files(['${buildDir}/outputs/code-coverage/connected/coverage.ec','${buildDir}/jacoco/testDebugUnitTest.exec'])
    reports {
        xml.enabled = true
        html.enabled = true
        //xml.destination = "${buildDir}/reports/jacoco/tests/release/jacocoTestReport.xml"
       xml.destination = "${buildDir}/reports/coverage/debug/report.xml"
    }

    
    
}



apply plugin: 'com.google.gms.google-services'
